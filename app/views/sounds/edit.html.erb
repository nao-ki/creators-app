
<div class="posts-wrapper-content">
<div class="preview" id="image">
 <% if @sound.sound.attached? %>
 <audio src="<%= rails_blob_path(@sound.sound)%>" type="audio/mp3" controls></audio>
<% end %>
<div class="video-preview-wrapper" >
<div id="videoSourceWrapper">
   <audio controls>
      <source id="videoSource"/>
   </audio>
  <div id="uploadVideoProgressBar" ></div>
</div>
</div>
</div>
  <div class="information-content">
  <div class="info-cover">
  <%= form_with model: @sound, local: true  do |s| %>

  <div class="title-form">
  <%# :タイトルを入力してください %>
  </div>
    <%= s.text_field :title, placeholder: "タイトル" %>
  <div class="content-wrapper">
  <%# :内容を入力してください。 %>
  </div>
    <%= s.text_area :content, class: 'content-form', placeholder: "内容" %>

    <%# <label class="file-up">
    ファイルを選択
    <%= s.file_field :sound, id: "uploadVideoFile", accept: "sound/*" %><br>
    <%# </label> %>

   <% if @errors %>
    <%= @errors %>
    <% end %>
    <%= s.submit "投稿する", class: 'send-button' %>
  <% end %>
  </div>
  </div>
</div>

<script>
$(document).ready(function(){
	$("#videoSourceWrapper").hide();
});

$('#uploadVideoFile').on('change',
    function() {
        var fileInput = document.getElementById("uploadVideoFile");
        console.log('Trying to upload the video file: %O', fileInput);

        if ('files' in fileInput) {
            if (fileInput.files.length === 0) {
                alert("Select a file to upload");
            } else {
                var $source = $('#videoSource');
                $source[0].src = URL.createObjectURL(this.files[0]);
                $source.parent()[0].load();
                $("#videoSourceWrapper").show();
                UploadVideo(fileInput.files[0]);
            }
        } else {
            console.log('No found "files" property');
        }
    }
);

function UploadVideo(file) {
		var loaded = 0;
    var chunkSize = 500000;
    var total = file.size;
    var reader = new FileReader();
    var slice = file.slice(0, chunkSize);

    // Reading a chunk to invoke the 'onload' event
    reader.readAsBinaryString(slice);
    console.log('Started uploading file "' + file.name + '"');
    $('#uploadVideoProgressBar').show();

    reader.onload = function (e) {
       //Just simulate API
  		setTimeout(function(){
    		loaded += chunkSize;
      	var percentLoaded = Math.min((loaded / total) * 100, 100);
      	console.log('Uploaded ' + Math.floor(percentLoaded) + '% of file "' + file.name + '"');
      	$('#uploadVideoProgressBar').width(percentLoaded + "%");

      	//Read the next chunk and call 'onload' event again
      	if (loaded <= total) {
      		slice = file.slice(loaded, loaded + chunkSize);
        	reader.readAsBinaryString(slice);
	      } else {
  	    	loaded = total;
    	    console.log('File "' + file.name + '" uploaded successfully!');
      	  $('#uploadVideoProgressBar').hide();
      	}
  		}, 250);
    }
}



function PostChunk(){
        //Send the sliced chunk to the REST API
        $.ajax({
            url: "http://api/url/etc",
            type: "POST",
            data: slice,
            processData: false,
            contentType: false,
            error: (function (errorData) {
                console.log(errorData);
                alert("Video Upload Failed");
            })
        }).done(function (e) {
            //The chunk is successfully uploaded!
            loaded += chunkSize;
            var percentLoaded = Math.min((loaded / total) * 100, 100);
            console.log('Uploaded ' + Math.floor(percentLoaded) + '% of file "' + file.name + '"');
            $('#uploadVideoProgressBar').width(percentLoaded + "%");

            //Read the next chunk and call 'onload' event again
            if (loaded <= total) {
                slice = file.slice(loaded, loaded + chunkSize);
                isFirstChunk = false;
                reader.readAsBinaryString(slice);
            } else {
                loaded = total;
                console.log('File "' + file.name + '" uploaded successfully!');
                $('#uploadVideoProgressBar').hide();
            }
        });
}

</script>